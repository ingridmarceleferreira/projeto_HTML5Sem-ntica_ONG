/* ===============================================
ENTREGA II - SISTEMA DE DESIGN (VARIÁVEIS GLOBAIS)
Define as cores, fontes e espaçamentos do projeto.
===============================================
*/
:root {
  /* 1. PALETA DE CORES (Requisito: 8 cores) */
  
  /* Cores Primárias (Ex: Azul para a marca) */
  --cor-primaria: #444d92;
  --cor-primaria-escura: #313768;

  /* Cores Secundárias (Ex: Laranja para botões de "Doar") */
  --cor-secundaria: #e67e22;
  --cor-secundaria-clara: #f39c12;

  /* Cores Neutras (Fundo, Superfícies, Texto, Bordas) */
  --cor-fundo: #f4f7f6;        /* para o <body>) */
  --cor-superficie: #ffffff;  /* (para cards, cabeçalho) */
  --cor-texto-principal: #333333;
  --cor-texto-secundario: #555555;
  --cor-borda: #e0e0e0;
  
  /* Cores de Feedback  */
  --cor-sucesso: #2ecc71;
  --cor-erro: #e74c3c;

  /* 2. TIPOGRAFIA HIERÁRQUICA (Requisito: 5 tamanhos) */
  /* Usamos 'rem' para acessibilidade (1rem = 16px por padrão) */
  --fonte-h1: 2.5rem;   /* 40px */
  --fonte-h2: 2rem;     /* 32px */
  --fonte-h3: 1.5rem;   /* 24px */
  --fonte-normal: 1rem;   /* 16px */
  --fonte-pequena: 0.875rem; /* 14px */
  
  /* Família da Fonte */
  --fonte-familia-principal: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;

  /* 3. SISTEMA DE ESPAÇAMENTO MODULAR (Requisito: Base 8px) */
  --espaco-xs: 0.5rem;  /* 8px */
  --espaco-s: 1rem;     /* 16px */
  --espaco-m: 1.5rem;   /* 24px */
  --espaco-l: 2rem;     /* 32px */
  --espaco-xl: 3rem;    /* 48px */
  --espaco-xxl: 4rem;   /* 64px */
}

/* ===============================================
CSS RESET E ESTILOS GLOBAIS (BASE)
Limpa os estilos do navegador e aplica nossas variáveis.
===============================================
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Garante que padding não afete a largura total */
}

body {
  font-family: var(--fonte-familia-principal);
  font-size: var(--fonte-normal);
  background-color: var(--cor-fundo);
  color: var(--cor-texto-principal);
  line-height: 1.6;

  /* REQUISITO: Leiaute principal usando CSS grid */
  /* Isso divide a página em 3 linhas: cabeçalho, conteúdo (que cresce), rodapé */
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh; /* Garante que o body ocupe 100% da altura da tela */
}

/* Aplica a hierarquia de fontes que eu defini */
h1 { font-size: var(--fonte-h1); }
h2 { font-size: var(--fonte-h2); }
h3 { font-size: var(--fonte-h3); }
p { font-size: var(--fonte-normal); }
a { color: var(--cor-primaria); } /* Cor padrão para links */

/* ===============================================
LEIAUTE (LAYOUT)
Define o contêiner principal e o sistema de 12 colunas.
===============================================
*/

/* O contêiner principal que centraliza o conteúdo */
.container {
  width: 90%; /* Responsivo por padrão */
  max-width: 1140px; /* Largura máxima comum para 12 colunas */
  margin-left: auto;
  margin-right: auto;
}

/* REQUISITO: Sistema de grid customizado (12 colunas)
  Vou aplicar isso no .container 
*/
.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--espaco-m); /* 24px de espaçamento entre as colunas */
}

/* ===============================================
SISTEMA DE GRID (12 COLUNAS) - CLASSES AUXILIARES
===============================================
*/

/* ===============================================
SISTEMA DE GRID RESPONSIVO (12 COLUNAS) - MOBILE-FIRST
===============================================
*/

/*
* MOBILE-FIRST (Padrão):
* Por padrão, TUDO ocupa 12 colunas (largura total).
* pro site funcionar bem em celulares*/
.col-4,
.col-6,
.col-8,
.col-12 {
  grid-column: span 12; /* Todos ocupam 12 colunas no celular */
}

/*
* BREAKPOINT 1: Tablets (ex: 768px)
* (Requisito: 5 breakpoints)
* Se a tela for MAIOR que 768px, aplicamos o grid de 12 colunas.
*/
@media (min-width: 768px) {
  
  /* Faz um item ocupar um terço (4 colunas) */
  .col-4 {
    grid-column: span 4;
  }
  
  /* Faz um item ocupar metade (6 colunas) */
  .col-6 {
    grid-column: span 6;
  }
  
  /* Faz um item ocupar dois terços (8 colunas) */
  .col-8 {
    grid-column: span 8;
  }
  
  /* .col-12 já ocupa 12, então não precisamos redeclará-lo */
}

/* BREAKPOINT 2: Desktops Pequenos (ex: 992px)*/
@media (min-width: 992px) {

  /* body { font-size: 1.05rem; } */
  
  /* Centraliza o formulário de cadastro melhor em telas médias */
  #form-cadastro {
    grid-column: 2 / 12; /* Ocupa 10 colunas */
  }
}

/* * BREAKPOINT 3: Desktops Largos (ex: 1200px)
* (Aqui o layout de 8/4 do index.html brilha)
*/
@media (min-width: 1200px) {
  /* Restaura o layout original do formulário para telas largas */
  #form-cadastro {
     grid-column: 3 / 11; /* Ocupa 8 colunas (como antes) */
  }
}

/* (Adicionerei Breakpoints 4 e 5 quando fizer o menu hambúrguer) */

/* ===============================================
COMPONENTE: CABEÇALHO (HEADER) E NAVEGAÇÃO
Requisitos: Flexbox para alinhamento.
===============================================
*/

.cabecalho {
  /* O cabeçalho ocupa 12 colunas no grid do <body> */
  grid-column: 1 / -1; 
  
  /* Estilo com as minhas variáveis */
  background-color: var(--cor-superficie); /* Fundo branco */
  border-bottom: 1px solid var(--cor-borda);
  padding: var(--espaco-s) 0; /* 16px de padding em cima/baixo */
  
  /* REQUISITO: Usando Flexbox para alinhar itens internos */
  display: flex;
  justify-content: space-between; /* Logo na esquerda, menu na direita */
  align-items: center; /* Alinha verticalmente */
  
  /* Define a largura do conteúdo interno do cabeçalho */
  /* Usei um .container *dentro* dele */
}

/* Limitador de largura para o conteúdo do cabeçalho.
  Coloquei um .container DENTRO do .cabecalho no HTML
*/
.cabecalho-container {
  width: 90%;
  max-width: 1140px;
  margin: 0 auto;
  
  /* Flexbox para o conteúdo interno */
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Estilização do Logo (que está no HTML) */
.logo-link img {
  height: 100px; /* Altura do logo */
  width: auto;
  display: block; /* Remove espaço extra abaixo da imagem */
}

/* Estilização do Menu Principal */
.menu-principal ul {
  list-style: none; /* Remove bolinhas */
  display: flex; /* Coloca links lado a lado */
  gap: var(--espaco-s); /* 16px de espaço entre os links */
}

.menu-principal a {
  text-decoration: none;
  color: var(--cor-texto-secundario);
  font-weight: bold;
  font-size: var(--fonte-pequena); /* 14px */
  padding: var(--espaco-xs) var(--espaco-s); /* 8px 16px */
  border-radius: 5px;
  
  /* Efeito suave de transição (Requisito: Estados visuais) */
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* REQUISITO: Botões com estados visuais (hover, focus) */

.menu-principal a:hover,
.menu-principal a:focus {
  background-color: var(--cor-fundo); /* Cinza claro no hover */
  color: var(--cor-primaria); /* Cor primária no hover */
}

/* Estilo para o link "Quero Ajudar" (Call to Action) */
.menu-principal a[href="cadastro.html"] {
  background-color: var(--cor-secundaria);
  color: var(--cor-superficie); /* Texto branco */
}

.menu-principal a[href="cadastro.html"]:hover,
.menu-principal a[href="cadastro.html"]:focus {
  background-color: var(--cor-primaria-escura);
  color: var(--cor-superficie);
}

/* ===============================================
COMPONENTE: CARDS
Requisitos: Sistema de cards responsivos.
Usado em projetos.html e index.html (pilares).
===============================================
*/

/* Estilo base para qualquer seção que deva parecer um "card".
  Vamos aplicar isso nas seções de projetos.html
*/
.card-secao {
  background-color: var(--cor-superficie); /* Fundo branco */
  border-radius: 8px; /* Cantos arredondados */
  padding: var(--espaco-l); /* 32px de espaçamento interno */
  margin-bottom: var(--espaco-l); /* 32px de espaço abaixo do card */
  box-shadow: 0 4px 12px rgba(0,0,0,0.05); /* Sombra suave */
  
  /* Faz o card ocupar 12 colunas no grid principal */
  grid-column: span 12; 
}

/* Estilo para os artigos *dentro* da seção "Nossos Pilares" (index.html) */
#nossos-pilares article {
  background-color: var(--cor-fundo); /* Fundo cinza claro, diferente */
  padding: var(--espaco-m);
  border-radius: 8px;
}

/* ===============================================
COMPONENTE: BOTÕES (BUTTONS)
Requisitos: Botões com estados visuais (hover, focus, active).
===============================================
*/

/* 1. Botão Padrão (Base) */
.btn {
  display: inline-block; /* Permite padding mas flui com o texto */
  padding: var(--espaco-s) var(--espaco-m); /* 16px 24px */
  border: none;
  border-radius: 5px;
  font-family: var(--fonte-familia-principal);
  font-size: var(--fonte-normal);
  font-weight: bold;
  text-decoration: none;
  cursor: pointer;
  text-align: center;
  
  /* Efeito suave de transição */
  transition: background-color 0.3s ease, transform 0.2s ease;
}

/* 2. Botão Principal (Call to Action) */
/* Usado para "Quero Ajudar", "Enviar Cadastro" */
.btn-principal {
  background-color: var(--cor-secundaria);
  color: var(--cor-superficie);
}

/* 3. Botão Secundário (Limpar, etc.) */
.btn-secundario {
  background-color: var(--cor-texto-secundario); 
  color: var(--cor-superficie); 
}

/* 4. ESTADOS VISUAIS (Hover, Focus, Active) */

.btn:hover,
.btn:focus {
  outline: none;
  /* Escurece ou muda a cor no hover/focus */
  transform: translateY(-2px); /* Efeito sutil de levantar */
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.btn-principal:hover,
.btn-principal:focus {
  background-color: var(--cor-primaria-escura); 
}

.btn-secundario:hover,
.btn-secundario:focus {
  background-color: var(--cor-texto-principal); 
}

.btn:active {
  transform: translateY(0); /* Volta ao normal ao clicar */
  box-shadow: none;
}

/* Estilização específica dos botões de doação em projetos.html */
.cards-doacao {
  display: flex; /* REQUISITO: Usar flexbox para componentes */
  flex-wrap: wrap; /* Permite quebrar linha em telas pequenas */
  gap: var(--espaco-s); /* 16px de espaço entre os botões */
  margin-top: var(--espaco-s);
}

.btn-doacao {
  flex-grow: 1; /* Faz os botões crescerem para ocupar o espaço */
  background-color: var(--cor-fundo);
  border: 2px solid var(--cor-borda);
  color: var(--cor-primaria);
  padding: var(--espaco-m);
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.btn-doacao:hover {
  background-color: var(--cor-primaria-escura);
  border-color: var(--cor-primaria-escura);
  color: var(--cor-superficie);
}

/* ===============================================
COMPONENTE: FORMULÁRIOS ESTILIZADOS
Requisitos: Estilo e validação visual.
===============================================
*/

/* 1. Estilização do Contêiner do Formulário */
#form-cadastro {
  background-color: var(--cor-superficie)
  border-radius: 8px;
  padding: var(--espaco-l); /* 32px */
  margin-bottom: var(--espaco-l);
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  
  /* Faz o formulário ocupar 8 colunas (deixando espaço nas laterais) */
  /* Centraliza no grid */
  grid-column: 3 / 11; 
  /* Começa na coluna 3 e vai até a 11 (8 colunas no total) */
}

/* 2. Agrupamento Lógico (<fieldset> e <legend>) */
fieldset {
  border: 1px solid var(--cor-borda); /* Borda sutil */
  border-radius: 5px;
  padding: var(--espaco-m); /* 24px */
  margin-bottom: var(--espaco-l); /* Espaço entre os fieldsets */
}

legend {
  font-weight: bold;
  color: var(--cor-primaria);
  padding: 0 var(--espaco-xs); /* 8px nas laterais */
  margin-left: var(--espaco-s); /* Alinha com o texto dos campos */
}

/* 3. Grupo de Formulário (<div class="form-group">) */
.form-group {
  margin-bottom: var(--espaco-m); /* 24px de espaço abaixo de cada campo */
}

/* 4. Rótulos (<label>) */
.form-group label {
  display: block; /* Garante que o input fique abaixo */
  margin-bottom: var(--espaco-xs); /* 8px de espaço acima do input */
  font-weight: bold;
  color: var(--cor-texto-secundario);
}

/* 5. Campos de Entrada (<input>, <textarea>, <select>) */
.form-group input[type="text"],
.form-group input[type="email"],
.form-group input[type="tel"],
.form-group input[type="date"],
.form-group textarea,
.form-group select {
  width: 100%; /* Ocupa toda a largura do .form-group */
  padding: var(--espaco-s); /* 16px */
  border: 1px solid var(--cor-borda);
  border-radius: 5px;
  font-family: var(--fonte-familia-principal);
  font-size: var(--fonte-normal);
  background-color: var(--cor-fundo);
  
  /* Efeito */
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

/* 6. Validação Visual e Interação (:focus) */

/* Ao clicar no campo */
.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
  outline: none; /* Remove o contorno padrão do navegador */
  border-color: var(--cor-primaria); /* Muda a cor da borda para a cor primária */
  box-shadow: 0 0 0 3px rgba(68, 77, 146, 0.1); /* Adiciona um brilho sutil */
}

/* Estilo para campos inválidos (ex: email incorreto, campo obrigatório vazio) */
/* Isso usa a validação nativa do HTML5 já configurada */
.form-group input:invalid:not(:placeholder-shown),
.form-group textarea:invalid:not(:placeholder-shown),
.form-group select:invalid {
  border-color: var(--cor-erro); /* Borda vermelha para erro */
  background-color: #fdecea; /* Fundo rosa claro*/
}

/* Opcional: Estilo para campos válidos */
.form-group input:valid:not(:placeholder-shown),
.form-group textarea:valid:not(:placeholder-shown),
.form-group select:valid {
   border-color: var(--cor-sucesso); /* Borda verde para sucesso */
}

/* 7. Botões no Formulário (Já estilizados pela classe .btn) */
#form-cadastro button[type="submit"],
#form-cadastro button[type="reset"] {
  margin-top: var(--espaco-m); /* Espaço acima dos botões */
  margin-right: var(--espaco-s); /* Espaço entre os botões */
}

/* ===============================================
COMPONENTE: NAVEGAÇÃO MOBILE (MENU HAMBÚRGUER)
Requisitos: Menu responsivo e breakpoints.
===============================================
*/

/* 1. Estilo do Botão Hambúrguer (as 3 linhas) */
.menu-hamburguer {
  display: none; /* ESCONDIDO no Desktop (Mobile-First Invertido aqui) */
  border: none;
  background: transparent;
  cursor: pointer;
  padding: var(--espaco-xs);
  
  /* Flexbox para empilhar as linhas */
  display: flex;
  flex-direction: column;
  gap: 5px; /* Espaço entre as linhas */
}

.hamburguer-linha {
  display: block;
  width: 25px; /* Largura da linha */
  height: 3px; /* Espessura da linha */
  background-color: var(--cor-primaria);
  border-radius: 2px;
  transition: transform 0.3s ease, opacity 0.3s ease;
}

/* 2. Breakpoint 4 e 5: A Mágica da Responsividade (992px) */
/* (Usando 992px como nosso breakpoint principal de "Tablet para Desktop") */

@media (max-width: 991px) {
  
  /* QUANDO A TELA FOR PEQUENA (Mobile/Tablet): */

  /* 2.1. Mostre o Botão Hambúrguer */
  .menu-hamburguer {
    display: flex; /* O botão aparece! */
  }

  /* 2.2. Esconda o Menu Principal (formato desktop) */
  .menu-principal ul {
    /* Esconde o menu fora da tela (para animar) */
    position: fixed; /* Fica fixo na tela */
    top: 0;
    right: 0;
    
    /* Começa 100% à direita (fora da tela) */
    transform: translateX(100%); 
    
    width: 80%; /* Ocupa 80% da tela quando aberto */
    height: 100vh; /* Ocupa 100% da altura */
    
    /* Layout vertical */
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--espaco-l); /* Espaçamento grande */
    
    background-color: var(--cor-superficie); /* Fundo branco */
    box-shadow: -5px 0 15px rgba(0,0,0,0.1);
    
    transition: transform 0.4s ease-in-out;
  }
  
  /* 2.3. Estilo dos links no menu aberto */
  .menu-principal a {
     font-size: var(--fonte-h3); /* Links ficam grandes */
  }

  /* 2.4 .menu-aberto */
  /* Quando o JS adicionar esta classe, o menu desliza para dentro */
  .menu-principal ul.menu-aberto {
    transform: translateX(0%); /* Volta para a tela */
  }

  /* 2.5. Animação do botão (Opcional, mas profissional) */
  /* Gira o X */
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(2) {
    opacity: 0;
  }
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
}

/* ===============================================
COMPONENTE: BADGES E TAGS
Requisitos: Sistema de categorização.
===============================================
*/

.badge {
  display: inline-block; /* Para ficar ao lado do texto */
  padding: 4px var(--espaco-xs); /* 4px em cima/baixo, 8px nas laterais */
  font-size: 0.75rem; /* 12px (bem pequeno) */
  font-weight: bold;
  text-transform: uppercase; /* TUDO EM MAIÚSCULO */
  letter-spacing: 0.5px; /* Espaçamento leve entre as letras */
  border-radius: 4px; /* Cantos levemente arredondados */
  
  /* Cores padrão (neutras) */
  background-color: var(--cor-borda);
  color: var(--cor-texto-secundario);
}

/* Variação de Cor: Badge Primário (para tags de "Voluntariado", por ex.) */
.badge-primario {
  background-color: var(--cor-primaria-escura);
  color: var(--cor-superficie); 
}

/* Variação de Cor: Badge Secundário (para "Urgente" ou "Doação") */
.badge-secundario {
  background-color: var(--cor-secundaria);
  color: var(--cor-superficie); 
}

/* Variação de Cor: Badge de Sucesso (para "Novo") */
.badge-sucesso {
  background-color: var(--cor-sucesso);
  color: var(--cor-superficie);
}

/* Variação de Cor: Badge de Erro (para "Urgente") */
.badge-erro {
  background-color: var(--cor-erro);
  color: var(--cor-superficie);
}

/* ===============================================
COMPONENTE: MENU DROPDOWN
Requisitos: Navegação sofisticada.
===============================================
*/

/* 1. O contêiner <li> que segura o dropdown */
.dropdown {
  position: relative; /* Chave para o posicionamento do submenu */
}

/* 2. O submenu (a lista aninhada) */
.dropdown-menu > . .dropdown-menu {
  display: none; /* ESCONDIDO por padrão */
  position: absolute; /* Posição absoluta em relação ao <li> pai */
  top: 100%; /* Aparece logo abaixo do link "Nossos Projetos" */
  left: 0;
  
  /* Estilização do card do dropdown */
  background-color: var(--cor-superficie); /* Fundo branco */
  border: 1px solid var(--cor-borda);
  border-radius: 5px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  min-width: 200px; /* Largura mínima do dropdown */
  
  /* Remove o gap do flex do pai (para não herdar) */
  flex-direction: column; 
  align-items: flex-start;
  padding: var(--espaco-xs) 0; /* 8px em cima/baixo */
  z-index: 10; /* Garante que fique acima de outro conteúdo */
}

/* 3. Os links dentro do dropdown */
.dropdown-menu li {
  width: 100%; /* Links ocupam 100% da largura */
}

.dropdown-menu a {
  /* Substitui o estilo do menu principal */
  display: block; /* Ocupa a linha inteira */
  padding: var(--espaco-s); /* 16px */
  width: 100%;
  color: var(--cor-texto-secundario);
  font-size: var(--fonte-pequena);
}

.dropdown-menu a:hover {
  background-color: var(--cor-fundo); /* Fundo cinza ao passar o mouse */
  color: var(--cor-primaria);
}

/* 4. A MÁGICA: Mostrar o dropdown no hover (APENAS EM DESKTOP) */
@media (min-width: 992px) { /* (O mesmo breakpoint do menu hambúrguer) */
  .dropdown:hover > .dropdown-menu,
  .dropdown:focus-within > .dropdown-menu {
    display: block; /* Mostra o submenu */
  }
}

/* 5. Ajuste no menu mobile (para o dropdown não quebrar) */

@media (max-width: 991px) {
  
  /* 1. Mostre o Botão Hambúrguer */
  .menu-hamburguer {
    display: flex;
  }

  /* 2. Esconda e Posicione o Menu Principal (formato desktop) fora da tela */
  .menu-principal ul {
    position: fixed; 
    top: 0;
    right: 0;
    transform: translateX(100%); /* Começa fora da tela */
    width: 80%; 
    height: 100vh; 
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--espaco-l); 
    background-color: var(--cor-superficie); 
    box-shadow: -5px 0 15px rgba(0,0,0,0.1);
    transition: transform 0.4s ease-in-out;   
  }
  
  /* 3. Estilo dos links no menu aberto */
  .menu-principal a {
     font-size: var(--fonte-h3); /* Links ficam grandes */
  }

  /* 4. A CLASSE MÁGICA: .menu-aberto (para o JS) */
  .menu-principal ul.menu-aberto {
    transform: translateX(0%); /* Traz o menu para a tela */
  }

  /* 5. Animação do botão (Opcional) */
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(1) { transform: translateY(8px) rotate(45deg); }
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(2) { opacity: 0; }
  .menu-hamburguer.ativo .hamburguer-linha:nth-child(3) { transform: translateY(-8px) rotate(-45deg); }

  /* 6. Ajustes do Dropdown DENTRO do Menu Mobile */
  .dropdown {
    width: 100%;
    text-align: center;
  }
  
  .dropdown-menu > .dropdown-menu{
    display: flex; /* Garante que está visível DENTRO do menu mobile */
    position: static; 
    box-shadow: none;
    border: none;
    width: 100%;
    background-color: transparent;
    padding: 0;
    margin-top: var(--espaco-s); 
    
    /* Ajustes para o dropdown mobile */
    flex-direction: column; /* Itens um abaixo do outro */
    align-items: center; /* Centraliza os itens */
    gap: var(--espaco-xs); /* Espaço menor entre itens do dropdown */
  }
  
  .dropdown-menu a {
     font-size: var(--fonte-normal); /* Fonte normal (menor que os links principais) */
     color: var(--cor-texto-secundario);
     background-color: var(--cor-fundo); /* Fundo cinza claro para destacar */
     width: 80%; /* Para não ocupar a tela toda */
     border-radius: 5px;
  }
} /* <-- FIM DO @media (max-width: 991px) */
 

/* ===============================================
REGRA FINAL PARA DROPDOWN NO DESKTOP (CORRIGIDO)
===============================================
*/
@media (min-width: 992px) { 
  
  /* 1. FORÇA o dropdown a ficar escondido por padrão */
  .dropdown > .dropdown-menu {
    display: none; 
  }

  /* 2. MOSTRA o dropdown APENAS no hover (sem :focus-within) */
  .dropdown:hover > .dropdown-menu { 
    display: block; 
  }
  
  /* 3. Esconde o botão hambúrguer no desktop */
  .menu-hamburguer {
     display: none;
  }
}

/* ===============================================
COMPONENTE: FEEDBACK (ALERTS)
Requisitos: alerts, toasts, modals.
===============================================
*/

/* 1. Estilo Base do Alerta */
.alert {
  padding: var(--espaco-s); /* 16px */
  margin-bottom: var(--espaco-m); /* 24px de espaço abaixo */
  border-radius: 5px;
  border: 1px solid transparent; /* Borda sutil */
  font-weight: 500;
  
  /* Faz o alerta ocupar 12 colunas no grid */
  grid-column: span 12; 
}

/* 2. Variação: Alerta de Sucesso (Verde) */
.alert-sucesso {
  background-color: #eaf7ec; /* Verde bem claro (derivado de --cor-sucesso) */
  border-color: var(--cor-sucesso);
  color: #226b3e; /* Verde escuro para o texto */
}

/* 3. Variação: Alerta de Erro (Vermelho) */
.alert-erro {
  background-color: #fdecea; /* Vermelho bem claro (derivado de --cor-erro) */
  border-color: var(--cor-erro);
  color: #a4281a; /* Vermelho escuro para o texto */
}

/* 4. Variação: Alerta de Informação (Azul) */
.alert-info {
  background-color: #e7f3fe; /* Azul bem claro (derivado de --cor-primaria) */
  border-color: var(--cor-primaria);
  color: #2c387e; /* Azul escuro para o texto */
}

/* ===============================================
UTILITÁRIO: CLASSE HIDDEN (para JS)
Esconde elementos da tela.
===============================================
*/
.hidden {
  display: none;
}
